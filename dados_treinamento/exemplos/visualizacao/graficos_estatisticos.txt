# Gráficos Estatísticos com Seaborn

## Exemplo 1: Boxplot
```python
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Criando dados de exemplo
np.random.seed(42)
dados = pd.DataFrame({
    'grupo': ['A'] * 100 + ['B'] * 100 + ['C'] * 100,
    'valor': np.concatenate([
        np.random.normal(0, 1, 100),
        np.random.normal(2, 0.5, 100),
        np.random.normal(-2, 1.5, 100)
    ])
})

# Criando boxplot
plt.figure(figsize=(10, 6))
sns.boxplot(x='grupo', y='valor', data=dados)
plt.title('Distribuição de Valores por Grupo')
plt.show()
```

## Exemplo 2: Histograma com KDE
```python
# Criando histograma com curva de densidade
plt.figure(figsize=(10, 6))
sns.histplot(data=dados, x='valor', kde=True)
plt.title('Distribuição dos Valores')
plt.xlabel('Valor')
plt.ylabel('Contagem')
plt.show()
```

## Exemplo 3: Violin Plot
```python
# Criando violin plot
plt.figure(figsize=(10, 6))
sns.violinplot(x='grupo', y='valor', data=dados)
plt.title('Distribuição Detalhada por Grupo')
plt.show()
```

## Exemplo 4: Heatmap de Correlação
```python
# Criando dados correlacionados
dados_corr = pd.DataFrame({
    'var1': np.random.normal(0, 1, 100),
    'var2': np.random.normal(0, 1, 100),
    'var3': np.random.normal(0, 1, 100)
})
dados_corr['var2'] = dados_corr['var1'] * 0.5 + np.random.normal(0, 0.1, 100)

# Calculando e plotando matriz de correlação
plt.figure(figsize=(8, 6))
sns.heatmap(dados_corr.corr(), annot=True, cmap='coolwarm')
plt.title('Matriz de Correlação')
plt.show()
```

## Dicas importantes:
1. Use seaborn para gráficos estatísticos mais bonitos
2. Ajuste o tamanho da figura conforme necessário
3. Adicione títulos e labels claros
4. Considere usar diferentes paletas de cores 