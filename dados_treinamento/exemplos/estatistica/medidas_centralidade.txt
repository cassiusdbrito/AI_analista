# Medidas de Centralidade com Python

## Exemplo 1: Cálculo de Média, Mediana e Moda
```python
import pandas as pd
import numpy as np

# Criando dados de exemplo
dados = pd.Series([10, 15, 20, 25, 30, 35, 40, 45, 50])

# Calculando medidas de centralidade
media = dados.mean()
mediana = dados.median()
moda = dados.mode()

print(f"Média: {media:.2f}")
print(f"Mediana: {mediana:.2f}")
print(f"Moda: {moda[0]}")
```

## Exemplo 2: Análise de Distribuição
```python
# Criando dados com distribuição normal
np.random.seed(42)
dados_normais = np.random.normal(loc=0, scale=1, size=1000)

# Calculando estatísticas descritivas
estatisticas = pd.Series(dados_normais).describe()
print(estatisticas)

# Calculando quartis
quartis = dados.quantile([0.25, 0.5, 0.75])
print("\nQuartis:")
print(quartis)
```

## Exemplo 3: Análise de Tendência Central por Grupo
```python
# Criando DataFrame com grupos
dados = pd.DataFrame({
    'grupo': ['A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C'],
    'valor': [10, 15, 20, 25, 30, 35, 40, 45, 50]
})

# Calculando estatísticas por grupo
estatisticas_grupo = dados.groupby('grupo')['valor'].agg(['mean', 'median', 'std'])
print(estatisticas_grupo)
```

## Dicas importantes:
1. Use numpy para cálculos numéricos eficientes
2. Considere outliers ao interpretar médias
3. Use median() para dados assimétricos
4. Combine diferentes medidas para análise completa 