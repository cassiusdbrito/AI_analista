# Análise de Correlação com Python

## Exemplo 1: Correlação de Pearson
```python
import pandas as pd
import numpy as np
from scipy import stats

# Criando dados correlacionados
np.random.seed(42)
n = 100
x = np.random.normal(0, 1, n)
y = 0.5 * x + np.random.normal(0, 0.1, n)

# Calculando correlação de Pearson
correlacao, p_valor = stats.pearsonr(x, y)
print(f"Correlação de Pearson: {correlacao:.3f}")
print(f"P-valor: {p_valor:.3f}")
```

## Exemplo 2: Matriz de Correlação
```python
# Criando DataFrame com múltiplas variáveis
dados = pd.DataFrame({
    'var1': np.random.normal(0, 1, n),
    'var2': np.random.normal(0, 1, n),
    'var3': np.random.normal(0, 1, n)
})

# Adicionando correlação entre variáveis
dados['var2'] = dados['var1'] * 0.7 + np.random.normal(0, 0.1, n)
dados['var3'] = dados['var1'] * -0.3 + np.random.normal(0, 0.1, n)

# Calculando matriz de correlação
matriz_corr = dados.corr()
print("\nMatriz de Correlação:")
print(matriz_corr)
```

## Exemplo 3: Correlação Não-Linear
```python
from scipy.stats import spearmanr

# Criando dados com correlação não-linear
x = np.linspace(0, 10, n)
y = np.sin(x) + np.random.normal(0, 0.1, n)

# Correlação de Pearson (linear)
corr_pearson, p_pearson = stats.pearsonr(x, y)

# Correlação de Spearman (não-linear)
corr_spearman, p_spearman = spearmanr(x, y)

print(f"Correlação de Pearson: {corr_pearson:.3f}")
print(f"Correlação de Spearman: {corr_spearman:.3f}")
```

## Dicas importantes:
1. Use Pearson para relações lineares
2. Use Spearman para relações não-lineares
3. Considere o p-valor para significância
4. Visualize as correlações com heatmaps 