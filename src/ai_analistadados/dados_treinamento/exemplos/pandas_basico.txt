Análise Exploratória com Pandas

1. Carregando dados:
import pandas as pd
df = pd.read_csv('seu_arquivo.csv')

2. Visualização inicial:
print(df.head())  # Primeiras 5 linhas
print(df.info())  # Informações sobre o DataFrame
print(df.describe())  # Estatísticas descritivas

3. Seleção de dados:
coluna = df['nome_coluna']  # Selecionar uma coluna
subset = df[['coluna1', 'coluna2']]  # Selecionar múltiplas colunas
linhas = df[df['coluna'] > valor]  # Filtrar linhas

4. Agrupamento:
grupos = df.groupby('coluna').mean()  # Média por grupo
grupos = df.groupby('coluna').agg(['mean', 'count', 'std'])  # Múltiplas estatísticas

5. Ordenação:
df_ordenado = df.sort_values('coluna', ascending=False)  # Ordenar por coluna

6. Pré-Processamento:
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.impute import SimpleImputer

def preProcess(filename):
    #Carregar os dados
    df = pd.read_csv(filename)

    #Tratar valores nulos
    imputer = SimpleImputer(strategy="median")  # Pode ser "median" ou "most_frequent"
    df_imputed = pd.DataFrame(imputer.fit_transform(df.select_dtypes(include=["number"])), columns=df.select_dtypes(include=["number"]).columns)

    #Normalizar variáveis numéricas
    scaler = StandardScaler()
    df_scaled = pd.DataFrame(scaler.fit_transform(df_imputed), columns=df_imputed.columns)

    # Codificar variáveis categóricas
    encoder = OneHotEncoder(sparse_output=False, drop="first")
    df_categorical = pd.DataFrame(encoder.fit_transform(df.select_dtypes(include=["object"])))

    #Combinar os dados processados
    df_final = pd.concat([df_scaled, df_categorical], axis=1)

    return df_final

